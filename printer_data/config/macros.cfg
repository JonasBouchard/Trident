#####################################################################
#                           Print Start
#####################################################################

[gcode_macro PRINT_START]
gcode:

  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("30")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  #SET_GCODE_OFFSET Z=0                                  # Set offset to 0 (Only if using Cartographer)

  # Home the printer, set absolute positioning
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position


  BED_MESH_CLEAR                                        # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}°C"          # Display info on display
    M106 S255                                           # Turn on the PT-fan
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}°C" # Display info on display
    TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}°C"          # Display info on display
    #STATUS_HEATING                                     # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Soak for 2 min"              # Display info on display
    #G4 P120000                                         # Wait 2 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150°C"                 # Display info on display
  M104 S150                                            # Heat hotend to 150c

  # Clean the nozzle
  CLEAN_NOZZLE                                         # Macro to clean the nozzle

  # Adjust Z tilt
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
                               

  # Bed mesh calibration
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  BED_MESH_CALIBRATE ADAPTIVE=1                        # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  #CLEAN_NOZZLE                                          # Macro to clean the nozzle
  #CARTOGRAPHER_TOUCH                                    # Calibrate z offset only with hot nozzle (Only if using Cartographer)

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}°C"    # Display info on display
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M104 S{target_extruder} T1                            # Heat the hotend to set temp
  M109 S{target_extruder} T0                            # Heat the hotend to set temp

  
  #START_TOOL_PROBE_CRASH_DETECTION                     # Activate Tool Probe Crash Detection
  
  SET_DISPLAY_TEXT MSG="Printer goes brrrr"             # Display info on display
  
  PURGE_LINE                                            # Purge line

  STOP_TOOL_PROBE_CRASH_DETECTION                       # Deactivate Tool Probe Crash Detection   

#####################################################################
#                           Print End
#####################################################################

[gcode_macro PRINT_END]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-20.0 F3600                ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    SET_FAN_SPEED FAN=T0_fan SPEED=0
    SET_FAN_SPEED FAN=auxiliary_fan SPEED=0
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
    M18

#####################################################################
#                      Z Tilt and Bed Leveling
#####################################################################

[gcode_macro Z_TILT_ADJUST]     # IDM/Cartographer optimized 3Z leveling macro
rename_existing: _Z_TILT_ADJUST
gcode:
    SAVE_GCODE_STATE NAME=STATE_Z_TILT         # Save current state for Z tilt adjustment
    BED_MESH_CLEAR                             # Clear bed mesh
    {% if not printer.z_tilt.applied %}
      _Z_TILT_ADJUST horizontal_move_z=10 retry_tolerance=1   # Adjust Z tilt with higher tolerance initially
    {% endif %}
    _Z_TILT_ADJUST horizontal_move_z=2          # Fine-tune Z tilt adjustment
    G28 Z                                       # Home Z again after Z_TILT_ADJUST 
    RESTORE_GCODE_STATE NAME=STATE_Z_TILT       # Restore saved state after adjustment

#--------------------------------------------------------------------

#####################################################################
#                   Filament Load and Unload
#####################################################################

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

#####################################################################
#                       Shell Commands
#####################################################################

[gcode_shell_command RMC_WIFI]
command: lynx httpforever.com
timeout: 2.0
verbose: True
[gcode_macro RMC_WIFI]
gcode:
    RUN_SHELL_COMMAND CMD=RMC_WIFI