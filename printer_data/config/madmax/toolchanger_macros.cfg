# https://github.com/viesturz/klipper-toolchanger/blob/main/macros.cfg

[gcode_macro _TAP_PROBE_ACTIVATE]
description: Ensure safe temp for bed probing
gcode:
    {% set max_temp = 180 %}
    {% set actual_temp = printer[params.HEATER].temperature %}
    {% set target_temp = printer[params.HEATER].target %}
    {% if target_temp > max_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (target_temp, max_temp)) }
        SET_HEATER_TEMPERATURE HEATER={params.HEATER} TARGET={ max_temp|int - 5 }
    {% endif %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if actual_temp > max_temp  + 2 %}
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (actual_temp, max_temp)) }
        TEMPERATURE_WAIT SENSOR={params.HEATER} MAXIMUM={ max_temp }
    {% endif %}

[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}

[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>]
  Set tool temperature and wait.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE WAIT=1 {newparameters}
  {% else %}
    M109.1 {rawparams}
  {% endif %}

[gcode_macro _WAIT_FOR_TEMP_WITHIN_TOLERANCE]
description: Wait for temp to get within tolerance
gcode:
    {% set tolerance = params.TOLERANCE | float  %}
    {% set actual = printer[params.HEATER].temperature | float %}
    {% set target = printer[params.HEATER].target | float %}
    {% if target != 0 and ((actual < (target - tolerance)) or (actual > (target + tolerance))) %}
        { action_respond_info('Extruder temperature %.1fC is not within %.1fC of %.1fC target; waiting...' % (actual, tolerance, target)) }
        RESPOND TYPE=echo MSG='TEMPERATURE_WAIT SENSOR={params.HEATER} MININUM={target - tolerance} MAXIMUM={target + tolerance}'
        TEMPERATURE_WAIT SENSOR={params.HEATER} MININUM={target - tolerance} MAXIMUM={target + tolerance}
    {% endif %}

[gcode_macro TEST_TOOLCHANGER]
description: Alternates between T1 and T0 for a given number of repetitions
# Usage: TOOL_SWAP_LOOP REPS=3
# Defaults to 2 repetitions if REPS is not provided
gcode:
  {% set reps = params.REPS|default(2)|int %}
  {% for i in range(reps) %}
    T1
    T0
  {% endfor %}

[gcode_macro SETUP_LEDS]
gcode:
    SET_LED LED=T0_led INDEX=1 RED=1.0 GREEN=1.0 BLUE=1.0
    SET_LED LED=T0_led INDEX=2 RED=1.0 GREEN=1.0 BLUE=1.0
    SET_LED LED=T0_led INDEX=3 RED=0.1 GREEN=0.1 BLUE=0.1
[delayed_gcode startup_leds]
initial_duration: 1
gcode:
    SETUP_LEDS
