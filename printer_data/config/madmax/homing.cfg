[homing_override]
axes: xyz
gcode:
  #INITIALIZE_TOOLCHANGER
  _INITIALIZE_FROM_DETECTED_TOOL
  STOP_TOOL_PROBE_CRASH_DETECTION
  {% if printer.probe.last_query  %}
         RESPOND TYPE=echo MSG='Z Probe triggered, cannot home.'
  {% else %}
    SET_GCODE_OFFSET X=0.0 Y=0.0 Z=0.0
    {% set stepper_x = printer.configfile.config["stepper_x"] %}
    {% set min_x = printer.configfile.config["stepper_x"]["position_min"]|float %}
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set center_x = (min_x + max_x) / 2 %}
    {% set min_y = printer.configfile.config["stepper_y"]["position_min"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set center_y = (min_y + max_y) / 2 %}
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

    {% if home_all %}
      # !!! Commented out... only seems like it should be necessary to create a little bit of clearance.
      G90 ; absolute mode
      # G28 Z
      SET_KINEMATIC_POSITION Z=0
      G0 Z5 F1000
      #G0 Z1.0 F600
    {% endif %}

    {% if home_all or 'Y' in params %}
      G90 ; absolute mode
      {% if "x" in printer.toolhead.homed_axes %}
        G0 X{center_x} F5000
      {% endif %}
      G28 Y
      G91 ; relative mode
      G0 Y-100 F5000 ; retract 100mm
    {% endif %}

    {% if home_all or 'X' in params %}
      G90 ; absolute mode
      {% if "y" in printer.toolhead.homed_axes %}
        G0 Y{center_y} F5000
      {% endif %}
      G28 X
      G91 ; relative mode
      G0 X-2 F5000 ; retract 2mm
    {% endif %}

    {% if home_all or 'Z' in params %}
      {% set random_x = (range(-10, 10) | random) / 10 %}
      {% set random_y = (range(-10, 10) | random) / 10 %}

      G90 ; absolute mode
      {% if 'R' in params %}
        G0 X{150+random_x} Y{285+random_y} F12000
      {% else %}
        G0 X{150+random_x} Y{150+random_y} F12000
      {% endif %}
      G28 Z
      _ADJUST_Z_HOME_FOR_TOOL_OFFSET
      {% if 'R' in params %}
        G0 Z200 F12000
      {% endif %}
    {% endif %}
    _APPLY_ACTIVE_TOOL_GCODE_OFFSETS
    M400
  {% endif %}


; Depending on the selected tool at the time of homing, the physical Z endstop position is offset.
; This corrects for that using current tool offset.
[gcode_macro _ADJUST_Z_HOME_FOR_TOOL_OFFSET]
gcode:
      G90 ; absolute mode
      # !!! Parameterize to use the same value twice below (Z5)
      G0 Z5 F1000
      {% set tool = printer.toolchanger.tool %}
      {% if tool %}
         {% set tool_z_offset = printer[tool].gcode_z_offset %}
         {% set probe_z_offset = printer.tool_probe_endstop.active_tool_probe_z_offset %}
         SET_KINEMATIC_POSITION Z={4.0+tool_z_offset|float+probe_z_offset|float}
      {% endif %}

[gcode_macro _APPLY_ACTIVE_TOOL_GCODE_OFFSETS]
gcode:
    ; Apply gcode offsets
    {% set tool = printer.toolchanger.tool %}
    {% if tool %}
      SET_GCODE_OFFSET X={printer[tool].gcode_x_offset} Y={printer[tool].gcode_y_offset} Z={printer[tool].gcode_z_offset}
    {% endif %}

[gcode_macro TOOL_BED_MESH_CALIBRATE]
gcode:
      {% set tool_z_offset = printer[printer.toolchanger.tool].gcode_z_offset %}
      G90 ; absolute mode
      G0 Z10 F1000
      # Bed mesh knows about the probe offset, but not about the tool offset.
      SET_KINEMATIC_POSITION Z={10.0-tool_z_offset|float}
      BED_MESH_CALIBRATE
      G0 Z5 F1000
      SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float}

[gcode_macro RECOVER]
gcode:
      G28 R