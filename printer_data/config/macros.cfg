#####################################################################
#                           Print Start
#####################################################################

[gcode_macro PRINT_START]
gcode:

  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("30")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  #SET_GCODE_OFFSET Z=0                                  # Set offset to 0 (Only if using Cartographer)

  # Home the printer, set absolute positioning
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position


  BED_MESH_CLEAR                                        # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}°C"          # Display info on display
    M106 S255                                           # Turn on the PT-fan
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}°C" # Display info on display
    TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}°C"          # Display info on display
    #STATUS_HEATING                                     # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Soak for 2 min"              # Display info on display
    #G4 P120000                                         # Wait 2 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150°C"                 # Display info on display
  M104 S150                                            # Heat hotend to 150c

  # Clean the nozzle
  CLEAN_NOZZLE                                         # Macro to clean the nozzle

  # Adjust Z tilt
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
                               

  # Bed mesh calibration
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  BED_MESH_CALIBRATE ADAPTIVE=1                        # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  #CLEAN_NOZZLE                                          # Macro to clean the nozzle
  #CARTOGRAPHER_TOUCH                                    # Calibrate z offset only with hot nozzle (Only if using Cartographer)

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}°C"    # Display info on display
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M104 S{target_extruder} T1                            # Heat the hotend to set temp
  M109 S{target_extruder} T0                            # Heat the hotend to set temp

  
  #START_TOOL_PROBE_CRASH_DETECTION                     # Activate Tool Probe Crash Detection
  
  SET_DISPLAY_TEXT MSG="Printer goes brrrr"             # Display info on display
  
  PURGE_LINE                                            # Purge line

  STOP_TOOL_PROBE_CRASH_DETECTION                       # Deactivate Tool Probe Crash Detection   

#####################################################################
#                           Print End
#####################################################################

[gcode_macro PRINT_END]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-20.0 F3600                ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    SET_FAN_SPEED FAN=T0_fan SPEED=0
    SET_FAN_SPEED FAN=auxiliary_fan SPEED=0
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
    M18

#####################################################################
#                 Pause, Resume and Cancel Printing
#####################################################################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
  
#--------------------------------------------------------------------

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% set get_params = ('VELOCITY=' + "600")  %}
  
  #{% if 'VELOCITY' in params|upper %}
  #  {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  #{%else %}
  #  {% set get_params = "" %}
  #{% endif %}

  
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
  
#--------------------------------------------------------------------

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode: 

    G91                                       # Relative Positionning
    G1 Z5 F600                                # Lower Bed
    G90                                       # Absolute Positionning
    G28 Y                                     # Home Y axis
    #_TOOLHEAD_PARK_PAUSE_CANCEL              # Call _TOOLHEAD_PARK_PAUSE_CANCEL macro
    TURN_OFF_HEATERS                          # Turn off all heaters
    CANCEL_PRINT_BASE                         # Call CANCEL_PRINT_BASE to cancel print
    SET_FAN_SPEED FAN=T0_fan SPEED=0
    SET_FAN_SPEED FAN=auxiliary_fan SPEED=0
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    M18

#####################################################################
#                              Z Tilt
#####################################################################

[gcode_macro Z_TILT_ADJUST]                    # IDM/Cartographer optimized 3Z leveling macro
rename_existing: _Z_TILT_ADJUST
gcode:
    SAVE_GCODE_STATE NAME=STATE_Z_TILT         # Save current state for Z tilt adjustment
    BED_MESH_CLEAR                             # Clear bed mesh
    {% if not printer.z_tilt.applied %}
      _Z_TILT_ADJUST horizontal_move_z=10 retry_tolerance=1   # Adjust Z tilt with higher tolerance initially
    {% endif %}
    _Z_TILT_ADJUST horizontal_move_z=2          # Fine-tune Z tilt adjustment
    G28 Z                                       # Home Z again after Z_TILT_ADJUST 
    RESTORE_GCODE_STATE NAME=STATE_Z_TILT       # Restore saved state after adjustment

#####################################################################
#                     Nozzle Cleaning and Purging
#####################################################################

[gcode_macro CLEAN_NOZZLE]
gcode:
  G90                                                   # Absolute position
  G0 X170 Y311 Z2 F10800                                # Go to starting point
  G0 X214 F18000                                        # Right move
  G0 X170                                               # Left move
  G0 X214                                               # Right move
  G0 X170                                               # Left move
  G0 X214                                               # Right move
  G0 X170                                               # Left move
  G0 X214                                               # Right move
  G0 X170                                               # Left move
  G0 X214                                               # Right move
  G0 X170                                               # Left move
  G90                                                   # Absolute position

#--------------------------------------------------------------------

[gcode_macro PURGE_LINE]
gcode:
  G90                                                   # Absolute position
  G0 X100 Y10 F10000                                    # Go to starting point
  G0 Z1.4                                               # Raise Z to 1.4
  G91                                                   # Relative positioning
  G1 X100 E130 F600                                     # Primeline
  G90                                                   # Absolute position

#####################################################################
#                           Fans Control
#####################################################################

  [gcode_macro M106]
rename_existing: M106.1
gcode:
    {% set has_p = 'P' in params %}
    {% set p = params.P|default(-1)|int %}
    {% set s = (params.S|default(255)|float) / 255.0 %}
    {% if (not has_p) or p == -1 or p == 0 %}
        SET_FAN_SPEED FAN=T0_fan SPEED={s}
    {% elif p == 2 %}
        SET_FAN_SPEED FAN=auxiliary_fan SPEED={s}
    {% elif p == 3 %}
        SET_FAN_SPEED FAN=exhaust_fan SPEED={s}
    {% else %}
        M106.1 {rawparams}
    {% endif %}

[gcode_macro M107]
rename_existing: M107.1
gcode:
    {% set has_p = 'P' in params %}
    {% set p = params.P|default(-1)|int %}
    {% if (not has_p) or p == -1 or p == 0 %}
        SET_FAN_SPEED FAN=T0_fan SPEED=0
    {% elif p == 2 %}
        SET_FAN_SPEED FAN=auxiliary_fan SPEED=0
    {% elif p == 3 %}
        SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    {% else %}
        M107.1 {rawparams}
    {% endif %}

#####################################################################
#                           Leds Control
#####################################################################

#####################################################################
#                   Filament Load and Unload
#####################################################################

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

#####################################################################
#                       Shell Commands
#####################################################################

[gcode_shell_command RMC_WIFI]
command: lynx httpforever.com
timeout: 2.0
verbose: True
[gcode_macro RMC_WIFI]
gcode:
    RUN_SHELL_COMMAND CMD=RMC_WIFI


#####################################################################
#                       Data_Sample
#####################################################################

[gcode_macro DATA_SAMPLE]
gcode:
  G90
  M106 S255
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM=40
  RESPOND TYPE=command MSG='Starting Phase 1 of 4'
  M117 Starting Phase 1 of 4
  M106 S0
  G28
  G0 Z1
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data1
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM=55
  CARTOGRAPHER_STREAM FILENAME=data1
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM=40

  M117 Starting Phase 2 of 4
  RESPOND TYPE=command MSG='Starting Phase 2 of 4'
  M106 S0
  G28 Z0
  G0 Z2
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data2
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM=55
  CARTOGRAPHER_STREAM FILENAME=data2
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM=40

  M117 "Starting Phase 3 of 4"
  RESPOND TYPE=command MSG='Starting Phase 3 of 4'
  M106 S0
  G28 Z0
  G0 Z3
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data3
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM=55
  CARTOGRAPHER_STREAM FILENAME=data3
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  M117 Waiting for Coil to cool to 40
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM=40

  M117 "Starting Phase 4 of 4"
  RESPOND TYPE=command MSG='Starting Phase 4 of 4'
  M106 S0
  G28 Z0
  G0 Z5
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data4
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM=55
  CARTOGRAPHER_STREAM FILENAME=data4
  M104 S0
  M140 S0
  RESPOND TYPE=command MSG='Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/klipper/data4 ~/cartographer-klipper/'
  M117 "Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/klipper/data4 ~/cartographer-klipper/"
  RESPOND TYPE=command MSG='Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta'
  M117 "Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta"